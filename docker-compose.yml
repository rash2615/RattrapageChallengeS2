version: '3.8'

services:
  # Base de donn√©es MongoDB
  mongodb:
    image: mongo:7.0
    container_name: spark-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: spark123
      MONGO_INITDB_DATABASE: spark
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - spark-network

  # Backend Node.js
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: spark-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:spark123@mongodb:27017/spark?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-password
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret
      PAYPAL_CLIENT_ID: your_paypal_client_id
      PAYPAL_CLIENT_SECRET: your_paypal_client_secret
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - spark-network

  # Frontend Vue.js
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: spark-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - spark-network

volumes:
  mongodb_data:

networks:
  spark-network:
    driver: bridge
